// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	order "air-grating-pms-backend/api/order/internal/handler/order"
	product "air-grating-pms-backend/api/order/internal/handler/product"
	product_set "air-grating-pms-backend/api/order/internal/handler/product_set"
	"air-grating-pms-backend/api/order/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/order",
				Handler: order.InsertOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/order",
				Handler: order.UpdateOrderInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/order",
				Handler: order.DeleteOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/order",
				Handler: order.GetOrderListByEnterpriseHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/workshop/order",
				Handler: order.GetOrderListByWorkshopHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/product-set",
				Handler: product_set.InsertProductSetHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/product-set",
				Handler: product_set.DeleteProductSetHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/product-set",
				Handler: product_set.UpdateProductSetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product-set",
				Handler: product_set.GetProductSetListByOrderHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/product",
				Handler: product.InsertProductHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/product",
				Handler: product.DeleteProductHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/product",
				Handler: product.UpdateProductHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product",
				Handler: product.GetProductListByProductSetHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
