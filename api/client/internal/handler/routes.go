// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	client "air-grating-pms-backend/api/client/internal/handler/client"
	unit_price "air-grating-pms-backend/api/client/internal/handler/unit_price"
	"air-grating-pms-backend/api/client/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/client",
				Handler: client.InsertClientHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/client",
				Handler: client.DeleteCientHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/client",
				Handler: client.UpdateClientHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/client",
				Handler: client.GetClientInfoByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/workshop/client",
				Handler: client.GetClientListByWorkshopHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/enterprise/client",
				Handler: client.GetClientListByEnterpriseHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPatch,
				Path:    "/unit-price",
				Handler: unit_price.SetUnitPriceByClientHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/unit-price",
				Handler: unit_price.GetUnitPriceByClientHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
