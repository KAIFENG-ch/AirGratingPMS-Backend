// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	enterprise "air-grating-pms-backend/api/organization/internal/handler/enterprise"
	workshop "air-grating-pms-backend/api/organization/internal/handler/workshop"
	"air-grating-pms-backend/api/organization/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/workshop",
				Handler: workshop.InsertWorkshopHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/workshop",
				Handler: workshop.UpdateWorkshopInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/workshop",
				Handler: workshop.DeleteWorkshopHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/workshop",
				Handler: workshop.GetWorkshopListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/enterprise",
				Handler: enterprise.CreateEnterpriseHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPatch,
				Path:    "/enterprise",
				Handler: enterprise.UpdateEnterpriseInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/enterprise",
				Handler: enterprise.DeleteEnterpriseHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/enterprise",
				Handler: enterprise.GetEnterpriseIdByNameHandler(serverCtx),
			},
		},
	)
}
