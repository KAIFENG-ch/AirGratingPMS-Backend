syntax = "v1"

info(
	title: Organization Module
	desc: Everything about Organization
	author: rsooio
	email: risin@risin.work
	version: 1.0
)

type (
	InsertWorkshopReq {
		Name        string `json:"name"`
		Address     string `json:"address,optional"`
		PhoneNumber string `json:"phone_number,optional"`
		ManagerId   int64  `json:"manager_id,optional"`
		Remark      string `json:"remark,optional"`
	}

	InsertWorkshopReply {
		Id      int64  `json:"id"`
		Message string `json:"message"`
	}

	UpdateWorkshopInfoReq {
		Id          int64  `json:"id"`
		Name        string `json:"name,optional"`
		Address     string `json:"address,optional"`
		PhoneNumber string `json:"phone_number,optional"`
		ManagerId   int64  `json:"manager_id,optional"`
		Remark      string `json:"remark,optional"`
	}

	UpdateWorkshopInfoReply {
		Message       string   `json:"message"`
		ChangedFields []string `json:"changed_fields"`
	}

	DeleteWorkshopReq {
		Id int64 `json:"id"`
	}

	DeleteWorkshopReply {
		Message string `json:"message"`
	}

	WorkshopInfo {
		Id          int64  `json:"id"`
		Name        string `json:"name"`
		Address     string `json:"address"`
		PhoneNumber string `json:"phone_number"`
		ManagerId   int64  `json:"manager_id"`
		Remark      string `json:"remark"`
	}

	GetWorkshopListReq {
		PageNumber int32 `json:"pn"`
		PageSize   int32 `json:"ps"`
	}

	GetWorkshopListReply {
		Message      string         `json:"message"`
		WorkshopList []WorkshopInfo `json:"workshop_list"`
	}
)

@server(
	jwt: Auth
	group: workshop
)
service organization-api {
	@handler InsertWorkshop
	post /workshop (InsertWorkshopReq) returns(InsertWorkshopReply)
	
	@handler UpdateWorkshopInfo
	patch /workshop (UpdateWorkshopInfoReq) returns(UpdateWorkshopInfoReply)
	
	@handler DeleteWorkshop
	delete /workshop (DeleteWorkshopReq) returns(DeleteWorkshopReply)
	
	@handler GetWorkshopList
	get /workshop (GetWorkshopListReq) returns(GetWorkshopListReply)
}

type (
	CreateEnterpriseReq {
		Name     string `json:"name"`
		BossName string `json:"boss_name"`
		Password string `json:"boss_password"`
		Address  string `json:"address,optional"`
		Remark   string `json:"remark,optional"`
	}

	CreateEnterpriseReply {
		Id      int64  `json:"id"`
		Message string `json:"message"`
	}

	UpdateEnterpriseInfoReq {
		Name    string `json:"name,optional"`
		Address string `json:"address,optional"`
		Remark  string `json:"remark,optional"`
	}

	UpdateEnterpriseInfoReply {
		Message       string   `json:"message"`
		ChangedFields []string `json:"changed_fields"`
	}

	DeleteEnterpriseReq {
		Password string `json:"password"`
	}

	DeleteEnterpriseReply {
		Message string `json:"message"`
	}

	GetEnterpriseIdByNameReq {
		Name string `form:"name"`
	}

	GetEnterpriseIdByNameReply {
		Id int64 `json:"id"`
	}
)

@server(
	group: enterprise
)
service organization-api {
	@handler CreateEnterprise
	post /enterprise (CreateEnterpriseReq) returns(CreateEnterpriseReply)
}

@server(
	jwt: Auth
	group: enterprise
)
service organization-api {
	@handler UpdateEnterpriseInfo
	patch /enterprise (UpdateEnterpriseInfoReq) returns(UpdateEnterpriseInfoReply)
	
	@handler DeleteEnterprise
	delete /enterprise (DeleteEnterpriseReq) returns(DeleteEnterpriseReply)
	
	@handler GetEnterpriseIdByName
	get /enterprise (GetEnterpriseIdByNameReq) returns(GetEnterpriseIdByNameReply)
}