// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	order "air-grating-pms-backend/api/production/internal/handler/order"
	production_plan "air-grating-pms-backend/api/production/internal/handler/production_plan"
	"air-grating-pms-backend/api/production/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/production-plan",
				Handler: production_plan.InsertProductionPlanHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/production-plan",
				Handler: production_plan.DeleteProductionPlanHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/production-plan",
				Handler: production_plan.UpdateProductionPlanHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/production-plan",
				Handler: production_plan.GetProductionPlanInfoByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/enterprise/production-plan",
				Handler: production_plan.GetProductionPlanListByEnterpriseHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/workshop/production-plan",
				Handler: production_plan.GetProductionPlanListByWorkshopHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/production-plan/start",
				Handler: production_plan.StartProductionPlanHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/production-plan/done",
				Handler: production_plan.CompleteProductionPlanHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/order/production",
				Handler: order.CompleteOrderProductionHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/order/plan",
				Handler: order.SetOrderProductionPlanHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
