// Code generated by goctl. DO NOT EDIT!
// Source: product.proto

package server

import (
	"context"

	"air-grating-pms-backend/rpc/product/internal/logic"
	"air-grating-pms-backend/rpc/product/internal/svc"
	"air-grating-pms-backend/rpc/product/pb"
)

type ProductServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedProductServer
}

func NewProductServer(svcCtx *svc.ServiceContext) *ProductServer {
	return &ProductServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductServer) Insert(ctx context.Context, in *pb.ProductInfo) (*pb.InsertResp, error) {
	l := logic.NewInsertLogic(ctx, s.svcCtx)
	return l.Insert(in)
}

func (s *ProductServer) Delete(ctx context.Context, in *pb.DeleteReq) (*pb.Empty, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *ProductServer) Update(ctx context.Context, in *pb.ProductInfo) (*pb.Empty, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

//  rpc CustomUpdate (ProductInfo) returns (Empty);
func (s *ProductServer) FindOneById(ctx context.Context, in *pb.FindOneByIdReq) (*pb.ProductInfo, error) {
	l := logic.NewFindOneByIdLogic(ctx, s.svcCtx)
	return l.FindOneById(in)
}

func (s *ProductServer) FindListByProductSet(ctx context.Context, in *pb.FindListByProductSetReq) (*pb.ProductList, error) {
	l := logic.NewFindListByProductSetLogic(ctx, s.svcCtx)
	return l.FindListByProductSet(in)
}
