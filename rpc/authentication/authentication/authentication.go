// Code generated by goctl. DO NOT EDIT!
// Source: authentication.proto

package authentication

import (
	"context"

	"air-grating-pms-backend/rpc/authentication/types/authentication"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthReq  = authentication.AuthReq
	AuthResp = authentication.AuthResp

	Authentication interface {
		Enforce(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*AuthResp, error)
	}

	defaultAuthentication struct {
		cli zrpc.Client
	}
)

func NewAuthentication(cli zrpc.Client) Authentication {
	return &defaultAuthentication{
		cli: cli,
	}
}

func (m *defaultAuthentication) Enforce(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*AuthResp, error) {
	client := authentication.NewAuthenticationClient(m.cli.Conn())
	return client.Enforce(ctx, in, opts...)
}
