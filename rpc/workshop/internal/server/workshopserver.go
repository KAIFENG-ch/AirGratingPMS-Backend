// Code generated by goctl. DO NOT EDIT!
// Source: workshop.proto

package server

import (
	"context"

	"air-grating-pms-backend/rpc/workshop/internal/logic"
	"air-grating-pms-backend/rpc/workshop/internal/svc"
	"air-grating-pms-backend/rpc/workshop/pb"
)

type WorkshopServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedWorkshopServer
}

func NewWorkshopServer(svcCtx *svc.ServiceContext) *WorkshopServer {
	return &WorkshopServer{
		svcCtx: svcCtx,
	}
}

func (s *WorkshopServer) Insert(ctx context.Context, in *pb.WorkshopInfo) (*pb.InsertResp, error) {
	l := logic.NewInsertLogic(ctx, s.svcCtx)
	return l.Insert(in)
}

func (s *WorkshopServer) Delete(ctx context.Context, in *pb.DeleteReq) (*pb.Empty, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *WorkshopServer) Update(ctx context.Context, in *pb.WorkshopInfo) (*pb.Empty, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *WorkshopServer) FindListByEnterprise(ctx context.Context, in *pb.FindListByEnterpriseReq) (*pb.WorkshopList, error) {
	l := logic.NewFindListByEnterpriseLogic(ctx, s.svcCtx)
	return l.FindListByEnterprise(in)
}
