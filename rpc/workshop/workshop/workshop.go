// Code generated by goctl. DO NOT EDIT!
// Source: workshop.proto

package workshop

import (
	"context"

	"air-grating-pms-backend/rpc/workshop/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteReq               = pb.DeleteReq
	Empty                   = pb.Empty
	FindListByEnterpriseReq = pb.FindListByEnterpriseReq
	WorkshopInfo            = pb.WorkshopInfo
	WorkshopList            = pb.WorkshopList

	Workshop interface {
		Insert(ctx context.Context, in *WorkshopInfo, opts ...grpc.CallOption) (*Empty, error)
		Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error)
		Update(ctx context.Context, in *WorkshopInfo, opts ...grpc.CallOption) (*Empty, error)
		PartialUpdate(ctx context.Context, in *WorkshopInfo, opts ...grpc.CallOption) (*Empty, error)
		FindListByEnterprise(ctx context.Context, in *FindListByEnterpriseReq, opts ...grpc.CallOption) (*WorkshopList, error)
	}

	defaultWorkshop struct {
		cli zrpc.Client
	}
)

func NewWorkshop(cli zrpc.Client) Workshop {
	return &defaultWorkshop{
		cli: cli,
	}
}

func (m *defaultWorkshop) Insert(ctx context.Context, in *WorkshopInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewWorkshopClient(m.cli.Conn())
	return client.Insert(ctx, in, opts...)
}

func (m *defaultWorkshop) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewWorkshopClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

func (m *defaultWorkshop) Update(ctx context.Context, in *WorkshopInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewWorkshopClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultWorkshop) PartialUpdate(ctx context.Context, in *WorkshopInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewWorkshopClient(m.cli.Conn())
	return client.PartialUpdate(ctx, in, opts...)
}

func (m *defaultWorkshop) FindListByEnterprise(ctx context.Context, in *FindListByEnterpriseReq, opts ...grpc.CallOption) (*WorkshopList, error) {
	client := pb.NewWorkshopClient(m.cli.Conn())
	return client.FindListByEnterprise(ctx, in, opts...)
}
