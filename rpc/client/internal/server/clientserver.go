// Code generated by goctl. DO NOT EDIT!
// Source: client.proto

package server

import (
	"context"

	"air-grating-pms-backend/rpc/client/internal/logic"
	"air-grating-pms-backend/rpc/client/internal/svc"
	"air-grating-pms-backend/rpc/client/pb"
)

type ClientServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedClientServer
}

func NewClientServer(svcCtx *svc.ServiceContext) *ClientServer {
	return &ClientServer{
		svcCtx: svcCtx,
	}
}

func (s *ClientServer) Insert(ctx context.Context, in *pb.ClientInfo) (*pb.InsertResp, error) {
	l := logic.NewInsertLogic(ctx, s.svcCtx)
	return l.Insert(in)
}

func (s *ClientServer) Delete(ctx context.Context, in *pb.DeleteReq) (*pb.Empty, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *ClientServer) Update(ctx context.Context, in *pb.ClientInfo) (*pb.Empty, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *ClientServer) FindOneById(ctx context.Context, in *pb.FindOneByIdReq) (*pb.ClientInfo, error) {
	l := logic.NewFindOneByIdLogic(ctx, s.svcCtx)
	return l.FindOneById(in)
}

func (s *ClientServer) FindListByWorkshop(ctx context.Context, in *pb.FindListByWorkshopReq) (*pb.ClientList, error) {
	l := logic.NewFindListByWorkshopLogic(ctx, s.svcCtx)
	return l.FindListByWorkshop(in)
}

func (s *ClientServer) FindListByEnterprise(ctx context.Context, in *pb.FindListByEnterpriseReq) (*pb.ClientList, error) {
	l := logic.NewFindListByEnterpriseLogic(ctx, s.svcCtx)
	return l.FindListByEnterprise(in)
}
