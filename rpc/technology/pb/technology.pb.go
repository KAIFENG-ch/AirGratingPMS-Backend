// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: technology.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{0}
}

type TechnologyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	EnterpriseId int64  `protobuf:"varint,2,opt,name=EnterpriseId,proto3" json:"EnterpriseId,omitempty"`
	WorkshopId   int64  `protobuf:"varint,3,opt,name=WorkshopId,proto3" json:"WorkshopId,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Info         string `protobuf:"bytes,5,opt,name=Info,proto3" json:"Info,omitempty"`
	Remark       string `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`
	Version      int64  `protobuf:"varint,7,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *TechnologyInfo) Reset() {
	*x = TechnologyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechnologyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnologyInfo) ProtoMessage() {}

func (x *TechnologyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnologyInfo.ProtoReflect.Descriptor instead.
func (*TechnologyInfo) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{1}
}

func (x *TechnologyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TechnologyInfo) GetEnterpriseId() int64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *TechnologyInfo) GetWorkshopId() int64 {
	if x != nil {
		return x.WorkshopId
	}
	return 0
}

func (x *TechnologyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TechnologyInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *TechnologyInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TechnologyInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type InsertResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *InsertResp) Reset() {
	*x = InsertResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertResp) ProtoMessage() {}

func (x *InsertResp) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertResp.ProtoReflect.Descriptor instead.
func (*InsertResp) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{2}
}

func (x *InsertResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindOneByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *FindOneByIdReq) Reset() {
	*x = FindOneByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneByIdReq) ProtoMessage() {}

func (x *FindOneByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneByIdReq.ProtoReflect.Descriptor instead.
func (*FindOneByIdReq) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{4}
}

func (x *FindOneByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindListByWorkshopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseId int64 `protobuf:"varint,1,opt,name=EnterpriseId,proto3" json:"EnterpriseId,omitempty"`
	WorkshopId   int64 `protobuf:"varint,2,opt,name=WorkshopId,proto3" json:"WorkshopId,omitempty"`
	PageSize     int32 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNumber   int32 `protobuf:"varint,4,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
}

func (x *FindListByWorkshopReq) Reset() {
	*x = FindListByWorkshopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindListByWorkshopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindListByWorkshopReq) ProtoMessage() {}

func (x *FindListByWorkshopReq) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindListByWorkshopReq.ProtoReflect.Descriptor instead.
func (*FindListByWorkshopReq) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{5}
}

func (x *FindListByWorkshopReq) GetEnterpriseId() int64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *FindListByWorkshopReq) GetWorkshopId() int64 {
	if x != nil {
		return x.WorkshopId
	}
	return 0
}

func (x *FindListByWorkshopReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindListByWorkshopReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type FindListByEnterpriseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseId int64 `protobuf:"varint,1,opt,name=EnterpriseId,proto3" json:"EnterpriseId,omitempty"`
	PageSize     int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNumber   int32 `protobuf:"varint,3,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
}

func (x *FindListByEnterpriseReq) Reset() {
	*x = FindListByEnterpriseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindListByEnterpriseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindListByEnterpriseReq) ProtoMessage() {}

func (x *FindListByEnterpriseReq) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindListByEnterpriseReq.ProtoReflect.Descriptor instead.
func (*FindListByEnterpriseReq) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{6}
}

func (x *FindListByEnterpriseReq) GetEnterpriseId() int64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *FindListByEnterpriseReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindListByEnterpriseReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type TechnologyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64             `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	List  []*TechnologyInfo `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *TechnologyList) Reset() {
	*x = TechnologyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_technology_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechnologyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnologyList) ProtoMessage() {}

func (x *TechnologyList) ProtoReflect() protoreflect.Message {
	mi := &file_technology_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnologyList.ProtoReflect.Descriptor instead.
func (*TechnologyList) Descriptor() ([]byte, []int) {
	return file_technology_proto_rawDescGZIP(), []int{7}
}

func (x *TechnologyList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TechnologyList) GetList() []*TechnologyInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_technology_proto protoreflect.FileDescriptor

var file_technology_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x79, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x0e, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x32, 0xac, 0x03, 0x0a, 0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x12, 0x3c, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0b,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x12, 0x23, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_technology_proto_rawDescOnce sync.Once
	file_technology_proto_rawDescData = file_technology_proto_rawDesc
)

func file_technology_proto_rawDescGZIP() []byte {
	file_technology_proto_rawDescOnce.Do(func() {
		file_technology_proto_rawDescData = protoimpl.X.CompressGZIP(file_technology_proto_rawDescData)
	})
	return file_technology_proto_rawDescData
}

var file_technology_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_technology_proto_goTypes = []interface{}{
	(*Empty)(nil),                   // 0: technology.Empty
	(*TechnologyInfo)(nil),          // 1: technology.TechnologyInfo
	(*InsertResp)(nil),              // 2: technology.InsertResp
	(*DeleteReq)(nil),               // 3: technology.DeleteReq
	(*FindOneByIdReq)(nil),          // 4: technology.FindOneByIdReq
	(*FindListByWorkshopReq)(nil),   // 5: technology.FindListByWorkshopReq
	(*FindListByEnterpriseReq)(nil), // 6: technology.FindListByEnterpriseReq
	(*TechnologyList)(nil),          // 7: technology.TechnologyList
}
var file_technology_proto_depIdxs = []int32{
	1, // 0: technology.TechnologyList.List:type_name -> technology.TechnologyInfo
	1, // 1: technology.technology.Insert:input_type -> technology.TechnologyInfo
	3, // 2: technology.technology.Delete:input_type -> technology.DeleteReq
	1, // 3: technology.technology.Update:input_type -> technology.TechnologyInfo
	4, // 4: technology.technology.FindOneById:input_type -> technology.FindOneByIdReq
	5, // 5: technology.technology.FindListByWorkshop:input_type -> technology.FindListByWorkshopReq
	6, // 6: technology.technology.FindListByEnterprise:input_type -> technology.FindListByEnterpriseReq
	2, // 7: technology.technology.Insert:output_type -> technology.InsertResp
	0, // 8: technology.technology.Delete:output_type -> technology.Empty
	0, // 9: technology.technology.Update:output_type -> technology.Empty
	1, // 10: technology.technology.FindOneById:output_type -> technology.TechnologyInfo
	7, // 11: technology.technology.FindListByWorkshop:output_type -> technology.TechnologyList
	7, // 12: technology.technology.FindListByEnterprise:output_type -> technology.TechnologyList
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_technology_proto_init() }
func file_technology_proto_init() {
	if File_technology_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_technology_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechnologyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindListByWorkshopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindListByEnterpriseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_technology_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechnologyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_technology_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_technology_proto_goTypes,
		DependencyIndexes: file_technology_proto_depIdxs,
		MessageInfos:      file_technology_proto_msgTypes,
	}.Build()
	File_technology_proto = out.File
	file_technology_proto_rawDesc = nil
	file_technology_proto_goTypes = nil
	file_technology_proto_depIdxs = nil
}
