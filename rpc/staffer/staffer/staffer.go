// Code generated by goctl. DO NOT EDIT!
// Source: staffer.proto

package staffer

import (
	"context"

	"air-grating-pms-backend/rpc/staffer/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteReq               = pb.DeleteReq
	Empty                   = pb.Empty
	FindListByEnterpriseReq = pb.FindListByEnterpriseReq
	FindListByWorkshopReq   = pb.FindListByWorkshopReq
	FindOneByIdReq          = pb.FindOneByIdReq
	FindOneByNameReq        = pb.FindOneByNameReq
	InsertResp              = pb.InsertResp
	StafferInfo             = pb.StafferInfo
	StafferList             = pb.StafferList

	Staffer interface {
		Insert(ctx context.Context, in *StafferInfo, opts ...grpc.CallOption) (*InsertResp, error)
		Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error)
		Update(ctx context.Context, in *StafferInfo, opts ...grpc.CallOption) (*Empty, error)
		FindOneById(ctx context.Context, in *FindOneByIdReq, opts ...grpc.CallOption) (*StafferInfo, error)
		FindOneByName(ctx context.Context, in *FindOneByNameReq, opts ...grpc.CallOption) (*StafferInfo, error)
		FindListByWorkshop(ctx context.Context, in *FindListByWorkshopReq, opts ...grpc.CallOption) (*StafferList, error)
		FindListByEnterprise(ctx context.Context, in *FindListByEnterpriseReq, opts ...grpc.CallOption) (*StafferList, error)
		InsertXa(ctx context.Context, in *StafferInfo, opts ...grpc.CallOption) (*InsertResp, error)
	}

	defaultStaffer struct {
		cli zrpc.Client
	}
)

func NewStaffer(cli zrpc.Client) Staffer {
	return &defaultStaffer{
		cli: cli,
	}
}

func (m *defaultStaffer) Insert(ctx context.Context, in *StafferInfo, opts ...grpc.CallOption) (*InsertResp, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.Insert(ctx, in, opts...)
}

func (m *defaultStaffer) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

func (m *defaultStaffer) Update(ctx context.Context, in *StafferInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultStaffer) FindOneById(ctx context.Context, in *FindOneByIdReq, opts ...grpc.CallOption) (*StafferInfo, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.FindOneById(ctx, in, opts...)
}

func (m *defaultStaffer) FindOneByName(ctx context.Context, in *FindOneByNameReq, opts ...grpc.CallOption) (*StafferInfo, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.FindOneByName(ctx, in, opts...)
}

func (m *defaultStaffer) FindListByWorkshop(ctx context.Context, in *FindListByWorkshopReq, opts ...grpc.CallOption) (*StafferList, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.FindListByWorkshop(ctx, in, opts...)
}

func (m *defaultStaffer) FindListByEnterprise(ctx context.Context, in *FindListByEnterpriseReq, opts ...grpc.CallOption) (*StafferList, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.FindListByEnterprise(ctx, in, opts...)
}

func (m *defaultStaffer) InsertXa(ctx context.Context, in *StafferInfo, opts ...grpc.CallOption) (*InsertResp, error) {
	client := pb.NewStafferClient(m.cli.Conn())
	return client.InsertXa(ctx, in, opts...)
}
